import pandas as pd
import matplotlib.pylab as plt
import statsmodels.formula.api as sm
from statsmodels.tsa import tsatools
from dmba import regressionSummary

Train_df = pd.read_csv(r'C:\Users\morva\Documents\Python Scripts\Train.csv')

# Let us convert the date information to a datetime object
Train_df['Date'] = pd.to_datetime(Train_df.Month, format='%d/%m/%Y')

# Let us convert dataframe column to series (name is used to label the data)
ridership_ts = pd.Series(Train_df.Ridership.values, index=Train_df.Date,name='Ridership')

# Let us define the time series frequency
ridership_ts.index = pd.DatetimeIndex(ridership_ts.index, freq=ridership_ts.index.inferred_freq)

# Let us plot the series
ax = ridership_ts.plot()
ax.set_xlabel('Time')
ax.set_ylabel('Ridership (in 000s)')
ax.set_ylim(1300, 2300)


# Let us take a look at a short time series from 1997 to 1999 using a slice 
ridership_ts_3yrs = ridership_ts['1997':'1999']
# We want to create a data frame with additional predictors from time series
# the following command adds a constant term, a trend term and a quadratic trend term
ridership_df = tsatools.add_trend(ridership_ts, trend='ctt')
# fit a linear regression model to the time series
ridership_lm = sm.ols(formula='Ridership ~ trend + trend_squared',
                      data=ridership_df).fit()

# shorter and longer time series
fig, axes = plt.subplots(nrows=2, ncols=1, figsize=(10,6))
ridership_ts_3yrs.plot(ax=axes[0])
ridership_ts.plot(ax=axes[1])
for ax in axes:
    ax.set_xlabel('Time')
    ax.set_ylabel('Ridership (in 000s)')
    ax.set_ylim(1300, 2300)
ridership_lm.predict(ridership_df).plot(ax=axes[1])
plt.show()

